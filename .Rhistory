qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
install.packages("ggplot2movies")
library(ggplot2)
library(ggplot2movies)
g <- ggplot(movies, aes(votes, rating))
print(g)
qplot(votes, rating, data = movies, smooth = "loess")
qplot(votes, rating, data = movies, geom_smooth = "loess")
qplot(votes, rating, data = movies) + geom_smooth()
?qplot
qplot(votes, rating, data = movies, geom = c("points","loess"))
qplot(votes, rating, data = movies, geom = c("points","loess"))
qplot(votes, rating, data = movies, geom = c("point","loess"))
qplot(votes, rating, data = movies, geom = c("point","smooth"))
0.75*0.3/(0.75*0.3-(1-0.52)*(1-0.3))
0.75*0.3/(0.75*0.3+(1-0.52)*(1-0.3))
pnorm(-1)
qnorm(0.95, mean = 1100, sd = 75)
qnorm(0.95, mean = 1100, sd = 7.5)
ppois(10, 15)
1100 + 30/3*qt(0.975, 8)
1100 + c(-1,1) * 30/3*qt(0.975, 8)
1100 + c(-1,1) * 30*qt(0.975, 8)
1100 + c(-1,1) * 30/3*qt(0.975, 9)
6/qt(0.975, 9)
6/qt(0.975, 8)
vN = 0.6
vO = 0.68
mN = 3
mO = 5
nN = 10
nO = 10
df = (vO/nO + vN/nN)^2/((vN/nN)^2/(nN-1)+(vO/nO)^2/(nO-1))
df <- (vO/nO + vN/nN)^2/((vO/nO)^2/(nO-1)+(vN/nN)^2/(nN-1))
df
mN - mO +c(-1,1)*qt(0.975,df)*sqrt(vO/nO+vN/nN)
-2 + c(-1,1) * qnorm(0.95, sd = sqrt(2^2/100+0.5^2/100))
-2 + c(-1,1) * qnorm(0.975, sd = sqrt(2^2/100+0.5^2/100))
mean(1.8^2,1.5^2)
((9-1)*1.8^2+(9-1)*1.5^2)/(9+9-2)
((9-1)*1.8^2+(9-1)*1.5^2)
ans <- ((9-1)*1.8^2+(9-1)*1.5^2)
ans
ans / 16
1.8^2+1.5^2
5.49/2
mean(2,3)
mean(2,4)
mean(2,5)
mean(2,100000)
?mean
mean(c(1.8^2,1.5^2))
-3-1+c(-1,1)*sqrt(2.745)*sqrt(1/9+1/9)
1.645*1.65/4
c(-1,1)*1.645*1.65/4-4
-3-1+c(-1,1)*qnorm(0.95)*sqrt(2.745)*sqrt(1/9+1/9)
Subject	Baseline	Week 2
1	140	132
2	138	135
3	150	151
4	148	146
5	135	130
Baseline <- c(140, 138, 150, 148, 135)
Week2 <- c(132, 135, 151, 146, 130)
t.test(Baseline, Week2, paired = TRUE)
1100 + c(-1, 1) * qt(0.975, 9-1)*30/sqrt(9)
binom.test(3,4,0.5,"greater")
?poisson.test
poisson.test(10, 1787, 1/100, "less")
?t.test
(1.8^2/9 + 1.5^2/9)^2/((1.8^2/9)^2/8+(1.5^2/9)^2/8)
df <- (1.8^2/9 + 1.5^2/9)^2/((1.8^2/9)^2/8+(1.5^2/9)^2/8)
t <- 4/sqrt(1.8^2/9+1.5^2/9)
t
pt(t,df)
(1-pt(t,df))*2
power.t.test(n = 100, delta = 0.01, sd = 0.04, sig.level = 0.05, alternative = "one.sided")$power
?power.t.test
power.t.test(n = 100, delta = 0.01, sd = 0.04, sig.level = 0.05, type = "one.sample", alternative = "one.sided")$power
power.t.test(n = 100, delta = 0.01, sd = 0.04, sig.level = 0.05, type = "paired", alternative = "one.sided")$power
power.t.test(delta = 0.01, sd = 0.04, sig.level = 0.05, power = 0.9, type = "paired", alternative = "one.sided")$n
qnorm(0.95)-qnorm(0.1)
((qnorm(0.95)-qnorm(0.1))*4)^2
((qt(0.95,138)-qt(0.1,138))*4)^2
((qt(0.95,power.t.test(delta = 0.01, sd = 0.04, sig.level = 0.05, power = 0.9, type = "paired", alternative = "one.sided")$n)-qt(0.1,power.t.test(delta = 0.01, sd = 0.04, sig.level = 0.05, power = 0.9, type = "paired", alternative = "one.sided")$n))*4)^2
?set.seed
?round
ggplot(mapping = aes(x = sample)) + geom_histogram(colour = "black", fill = "white", aes(y = ..density..)) +
stat_function(fun = dnorm, args = list(mean = 1/lambda, sd = 1/lambda), size = 1, aes(col = "Normal distribution")) +
scale_fill_manual("Histogram", values = "white") +
scale_color_manual("Line", values = "red") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Density histogram of random exponentials", x = "Value", y = "Density")
library(ggplot2)
set.seed(0704)
nosim <- 1000
n <- 40
lambda <- 0.2
sample <- rexp(nosim * n, lambda)
sample_avg <- apply(matrix(sample, nosim), 1, mean)
# 1)
means <- cumsum(sample_avg) / (1:nosim)
print(ggplot(data.frame(x = rep(1:nosim, times = 2), y = c(means, rep(1/lambda, times = nosim)), type = factor(rep(1:2, each = nosim))),
aes(x = x, y = y, col = type)) + geom_line(size = 1) +
scale_color_manual(name = "Legend", labels = c("Sample mean", "Theoretical mean"),
values = c("black", "red")) +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Sample Mean versus Theoretical Mean", x = "Number of simulations", y = "Mean"))
print(mean(sample_avg))
# Check actual vs theoretical
# 2)
variances <- sapply(2:nosim, function(i) {sum((sample_avg[1:i] - means[i])^2)/(i-1)})
print(ggplot(data.frame(x = rep(2:nosim, times = 2), y = c(variances, rep((1/lambda)^2/n, times = nosim-1)), type = factor(rep(1:2, each = nosim-1))),
aes(x = x, y = y, col = type)) + geom_line(size = 1) +
scale_color_manual(name = "Legend", labels = c("Sample variance", "Theoretical variance"),
values = c("black", "red")) +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Sample Variance versus Theoretical Variance", x = "Number of simulations", y = "Variance"))
print(var(sample_avg))
# Check actual vs theoretical
# 3)
print(ggplot(mapping = aes(x = sample)) + geom_histogram(colour = "black", fill = "white", aes(y = ..density..)) +
stat_function(fun = dnorm, args = list(mean = 1/lambda, sd = 1/lambda), size = 1, aes(col = "Normal distribution")) +
scale_fill_manual("Histogram", values = "white") +
scale_color_manual("Line", values = "red") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Density histogram of random exponentials", x = "Value", y = "Density"))
ggplot(mapping = aes(x = sample)) +
geom_histogram(colour = "black", aes(y = ..density.., fill = "Actual distribution")) +
stat_function(fun = dnorm, args = list(mean = 1/lambda, sd = 1/lambda), size = 1,
aes(col = "Normal distribution")) +
scale_fill_manual("Histogram", values = "white") +
scale_color_manual("Line", values = "red") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Density histogram of random exponentials", x = "Value", y = "Density"))
ggplot(mapping = aes(x = sample)) +
geom_histogram(colour = "black", aes(y = ..density.., fill = "Actual distribution")) +
stat_function(fun = dnorm, args = list(mean = 1/lambda, sd = 1/lambda), size = 1,
aes(col = "Normal distribution")) +
scale_fill_manual("Histogram", values = "white") +
scale_color_manual("Line", values = "red")
ggplot(mapping = aes(x = sample)) +
geom_histogram(colour = "black", aes(y = ..density.., fill = "Actual distribution")) +
stat_function(fun = dnorm, args = list(mean = 1/lambda, sd = 1/lambda), size = 1,
aes(col = "Normal distribution")) +
scale_fill_manual("Histogram", values = "white") +
scale_color_manual("Line", values = "red") +
theme(plot.title = element_text(hjust = 0.5))
ggplot(mapping = aes(x = sample)) +
geom_histogram(colour = "black", aes(y = ..density.., fill = "Actual distribution")) +
stat_function(fun = dnorm, args = list(mean = 1/lambda, sd = 1/lambda), size = 1,
aes(col = "Normal distribution")) +
scale_fill_manual("Histogram", values = "white") +
scale_color_manual("Line", values = "red") +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Density histogram of random exponentials", x = "Value", y = "Density"))
?ToothGrowth
dim(ToothGrowth)
subset_supp_1 <- subset(ToothGrowth, supp == "VC")$len
subset_supp_2 <- subset(ToothGrowth, supp == "OJ")$len
## t-test on the averages of tooth length for the two different supplement types (function t.test)
with(ToothGrowth, t.test(subset_supp_2, subset_supp_1, paired = FALSE, var.equal = FALSE))
## t-test on the averages of tooth length for the two different supplement types (manual calculation)
s2_supp_1 <- var(subset_supp_1)
s2_supp_2 <- var(subset_supp_2)
n_supp_1 <- length(subset_supp_1)
n_supp_2 <- length(subset_supp_2)
df_supp <- (s2_supp_1/n_supp_1 + s2_supp_2/n_supp_2)^2/((s2_supp_1/n_supp_1)^2/(n_supp_1-1) + (s2_supp_2/n_supp_2)^2/(n_supp_2-1))
m_supp_1 <- mean(subset_supp_1)
m_supp_2 <- mean(subset_supp_2)
CI <- m_supp_2 - m_supp_1 + c(-1,1) * qt(0.975, df_supp) * sqrt(s2_supp_1/n_supp_1 + s2_supp_2/n_supp_2)
p_value <- 2 * (1 - pt((m_supp_2 - m_supp_1) / sqrt(s2_supp_1/n_supp_1 + s2_supp_2/n_supp_2), df_supp))
print(paste("The confidence interval of the difference between the averages is", as.character(CI)))
print(paste("The p-value is", round(p_value, 3)))
class(CI)
CI
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
# Dependencies
library(datasets)
library(ggplot2)
# Load the dataset
data(ToothGrowth)
# Dataset structure
dim(ToothGrowth)
head(ToothGrowth)
sum(!complete.cases(ToothGrowth))
# Basic summary
with(ToothGrowth, table(supp, dose))
summary(ToothGrowth)
# Plot of tooth length vs dose by supplement type
ggplot(ToothGrowth, aes(x = dose, y = len, col = dose)) + geom_point() + facet_grid(. ~ supp) +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Scatterplot of tooth length by dose and supp")
# Plot of tooth length by supplement type
print(ggplot(ToothGrowth, aes(x = supp, y = len)) + geom_boxplot() +
theme(plot.title = element_text(hjust = 0.5)) +
labs(title = "Boxplot of len by supp", x = "supp"))
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
w * x
sum(w * x)/sum(w)
sum(w*(x-0.300)^2)
sum(w*(x-1.077)^2)
sum(w*(x-0.0025)^2)
sum(w*(x-0.1471)^2)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.
05)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit <- lm(y ~ x - 1)
fit
sum(x)*sum(y) / sum(x^2)
sum(x*y) / sum(x^2)
data(mtcars)
with(mtcars, cor(mpg, weight)*sd(mpg)/sd(weight))
colnames(mtcars)
with(mtcars, cor(mpg, wt)*sd(mpg)/sd(wt))
fit <- with(mtcars, lm(mpg ~ wt))
fit
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
(x - mean(x))/sd(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
fit <- lm(y ~ x)
fit
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
mean(x)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y ~ x)
fit
summary(fit)
fit$coefficients
fit$model
fit$call
fit$residuals
sd(fit$residuals)
sd(fit$residuals)*sqrt(7)/sqrt(9)
sd(fit$residuals)*sqrt(9)/sqrt(7)
sd(fit$residuals)*sqrt(9)/sqrt(8)
deviance(fit)
fit <- with(mtcars, lm(mpg ~ wt))
predict(fit, 1)
predict(fit, wt = 1)
predict(fit, newdata = 1)
?predict
predict(fit, wt = 100)
predict(fit, wt = 1)
predict(fit, wt = 21)
predict(fit, wt = c(1,21))
summary(fit)$sigma
sigma <- summary(fit)$sigma
fit <- with(mtcars, lm(mpg ~ wt))
predict.lm(fit, wt = c(1,21))
predict.lm(fit, wt = 1)
predict.lm(fit, newdata = 1)
?eval
## Predictions
x <- rnorm(15)
y <- x + rnorm(15)
predict(lm(y ~ x))
new <- data.frame(x = seq(-3, 3, 0.5))
predict(lm(y ~ x), new, se.fit = TRUE)
pred.w.plim <- predict(lm(y ~ x), new, interval = "prediction")
pred.w.clim <- predict(lm(y ~ x), new, interval = "confidence")
fit <- with(mtcars, lm(mpg ~ wt))
new <- data.frame(wt = mean(mtcars$wt))
predict(fit, new, interval = "prediction")
predict(fit, new, interval = "confidence")
?mtcars
fit <- with(mtcars, lm(mpg ~ wt))
table(mtcars$wt)
new <- data.frame(wt = 3.0)
predict(fit, new, interval = "prediction")
predict(fit, new, interval = "confidence")
summary(fit)
summary(fit)$coefficient
summary(fit)$coefficient[2,1]
summary(fit)$coefficient[2,2]
summary(fit)$coefficient[2,1] + c(-1,1) * qt(.975, df = fit$df) * summary(fit)$coefficient[2,2]
(summary(fit)$coefficient[2,1] + c(-1,1) * qt(.975, df = fit$df) * summary(fit)$coefficient[2,2])*2
summary(fit)$sigma
summary(fit)$sigma^2
variance(fit$residuals)
var(fit$residuals)
var(fit$residuals) / var(mtcars$mpg)
var(mtcars$mpg) / var(fit$residuals)
var(mtcars$mpg) / summary(fit)$sigma^2
class(mtcars$cyl)
table(mtcars$cyl)
fit <- with(mtcars, lm(mpg ~ factor(cyl) + wt))
summary(fit)
fit1 <- with(mtcars, lm(mpg ~ factor(cyl) + wt))
summary(fit1)
fit2 <- with(mtcars, lm(mpg ~ factor(cyl)))
summary(fit2)
summary(fit1)
fit3 <- with(mtcars, lm(mpg ~ factor(cyl) * wt))
summary(fit3)
anova(fit1, fit3)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm(y ~ x)
hatvalues(fit)
dfbeta(fit)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm(y ~ x)
hatvalues(fit)
dfbeta(fit)
dfbetas(fit)
dfbeta(fit)
?dfbetas
?dfbeta
library(MASS)
?shuttle
class(shuttle$use)
class(shuttle$wind)
table(shuttle$wind)
fit <- with(shuttle, glm(use ~ wind))
table(shuttle$use)
fit <- with(shuttle, glm(ifelse(use == "auto", 1, 0) ~ wind))
fit
fit$coefficients
fit$coefficients[2]
exp(1)
exp(-fit$coefficients[2])
exp(fit$coefficients[2])
p1 <- exp(fit$coefficients[1])/(1+exp(fit$coefficients[1]))
p2 <- exp(fit$coefficients[1]+fit$coefficients[2])/(1+exp(fit$coefficients[1]+fit$coefficients[2]))
o1 <- p1/(1-p1)
o2 <- p2/(1-p2)
o2/o1
o1/o2
table(shuttle$use, shuttle$wind)
(72/56)/(73/55)
table(shuttle$magn)
fit <- with(shuttle, glm(ifelse(use == "auto", 1, 0) ~ wind + magn))
summary(fit)
table(shuttle$magn, shuttle$wind)
fit <- with(shuttle, glm(ifelse(use == "auto", 1, 0) ~ wind))
fit
fit <- with(shuttle, glm(ifelse(use == "auto", 0, 1) ~ wind))
fit
InsectSprays
class(InsectSprays$spray)
fit <- with(InsectSprays, glm(count ~ spray))
fit
summary(fit)
fit <- with(shuttle, glm(ifelse(use == "auto", 0, 1) ~ wind, "binomial"))
summary(fit)
fit$coefficients
fit$coefficients[2]
exp(fit$coefficients[2])
fit <- with(shuttle, glm(ifelse(use == "auto", 0, 1) ~ wind + magn, "binomial"))
fit$coefficients
exp(fit$coefficients[2])
fit <- with(InsectSprays, glm(count ~ spray, "poisson"))
summary(fit)
fit$coefficients[2]
exp(fit$coefficients[2])
exp(-fit$coefficients[2])
x <- -5:5
y <- c(5.12, 3.93, 2.67, 1.87, 0.52, 0.08, 0.93, 2.05, 2.54, 3.87, 4.97)
plot(x,y)
x1 <- x
x2 <- ifelse(x >= 0, x, 0)
x2
x1
xnew <- cbind(x1, x2)
xxnew
xnew
xnew <- cbind(1, x1, x2)
xnew
xnew <- data.frame(xnew)
xxnew
xnew
colnames(xnew) <- c("intercept", "x1", "x2")
xnew
fit <- lm(y ~ xnew - 1)
xnew <- cbind(1, x1, x2)
fit <- lm(y ~ xnew - 1)
summary(fit)
fit$coefficients[2] - fit$coefficients[3]
fit$coefficients[3] + fit$coefficients[2]
?data
?mtcase
?mtcars
?ToothGrowth
data(mtcars)
mtcars
setwd("../Desktop/Courses/R/Course 7/Week 4")
source("automatic_manual.R")
str(mtcars)
summary(mtcars)
summary(ToothGrowth)
str(ToothGrowth)
?mtcars
str(ToothGrowth)
source("automatic_manual.R")
source("automatic_manual.R")
source("automatic_manual.R")
source("automatic_manual.R")
summary(lm(mpg ~ .))
summary(lm(mpg ~ ., mtcars))
summary(lm(mpg ~ wt, mtcars))
summary(lm(mpg ~ . - cyl, mtcars))
summary(lm(mpg ~ . - cyl - vs, mtcars))
summary(lm(mpg ~ . - cyl - vs - carb, mtcars))
summary(lm(mpg ~ . - cyl - vs - carb - drat, mtcars))
summary(lm(mpg ~ . - cyl - vs - carb - drat - gear, mtcars))
summary(lm(mpg ~ . - cyl - vs - carb - drat - gear - disp, mtcars))
summary(lm(mpg ~ . - cyl - vs - carb - drat - gear - disp - hp, mtcars))
summary(lm(mpg ~ . - cyl - vs - carb - drat - gear - disp - hp - 1, mtcars))
summary(lm(mpg ~ . - cyl - vs - carb - drat - gear - disp - qsec - 1, mtcars))
summary(lm(mpg ~ . - cyl - vs - carb - drat - gear - disp - qsec, mtcars))
summary(lm(mpg ~ wm, mtcars))
summary(lm(mpg ~ am, mtcars))
mean(mtcars$mpg[mtcars$am == 1])-mean(mtcars$mpg[mtcars$am == 0])
table(mtcars$am)
source("automatic_manual.R")
source("automatic_manual.R")
summary(fit1)
summary(fit2)
summary(fit3)
summary(fit4)
summary(fit5)
summary(fit6)
anova(fit1, fit2, fit3, fit4, fit5, fit6)
summary(fit3)
source("automatic_manual.R")
summary(fit7)
fit6 <- lm(mpg ~ ., data = mtcars)
summary(fit6)
fit7 <- lm(mpg ~ . - cyl, data = mtcars)
summary(fit7)
fit8 <- lm(mpg ~ . - cyl - vs, data = mtcars)
summary(fit8)
fit9 <- lm(mpg ~ . - cyl - vs - carb, data = mtcars)
summary(fit9)
fit10 <- lm(mpg ~ . - cyl - vs - carb - gear, data = mtcars)
summary(fit10)
fit11 <- lm(mpg ~ . - cyl - vs - carb - gear - drat, data = mtcars)
summary(fit11)
fit12 <- lm(mpg ~ . - cyl - vs - carb - gear - drat - disp, data = mtcars)
summary(fit12)
fit13 <- lm(mpg ~ . - cyl - vs - carb - gear - drat - disp - hp, data = mtcars)
summary(fit13)
fit14 <- lm(mpg ~ . - cyl - vs - carb - gear - drat - disp - hp - 1, data = mtcars)
summary(fit14)
summary(fit3_b)
fit3_b <- lm(mpg ~ wt + hp, data = mtcars)
summary(fit3_b)
summary(fit1)
summary(fit1)$coeff
summary(fit1)$coeff[,c(1,4)]
t(summary(fit1)$coeff[,c(1,4)])
round(t(summary(fit1)$coeff[,c(1,4)]), 2)
round(t(summary(fit1)$coeff[,c(1,4)]), 3)
round(t(summary(fit1)$coeff[,c(1,4)]), 5)
round(t(summary(fit13)$coeff[,c(1,4)]), 5)
round(t(summary(fit14)$coeff[,c(1,4)]), 5)
round(t(summary(fit14)$coeff[,c(1,4)]), 3)
format(round(t(summary(fit14)$coeff[,c(1,4)]), 3), nsmall = 3)
boxplot(mtcars$mpg, mtcars$am)
?boxplot
boxplot(mtcars$mpg ~ mtcars$am)
cor(mtcars)
cor(mtcars)[1,]
round(cor(mtcars)[1,],3)
round(cor(mtcars)[1,],3)
?sort
sort(round(cor(mtcars)[1,],3), decreasing = TRUE)
?order
sort(abs(mtcars), decreasing = TRUE)
sort(abs(mtcars[1,]), decreasing = TRUE)
sort((mtcars[1,]), decreasing = TRUE)
sort(abs(cor(mtcars)[1,]), decreasing = TRUE)
sort(abs(cor(mtcars)[1,]), decreasing = TRUE, intex.return = TRUE)
sort(abs(cor(mtcars)[1,]), decreasing = TRUE, index.return = TRUE)
sort(abs(cor(mtcars)[1,]), decreasing = TRUE, index.return = TRUE)$ix
cor(mtcars)[1,sort(abs(cor(mtcars)[1,]), decreasing = TRUE, index.return = TRUE)$ix]
round(cor(mtcars)[1,sort(abs(cor(mtcars)[1,]), decreasing = TRUE, index.return = TRUE)$ix], 3)
fit3$coefficients
fit3$coefficients[2]
summary(fit3)$coef
summary(fit3)$coefficients
summary(fit3)$coef
summary(fit3)$coef[,4]
summary(fit3)$coef[2,4]
summary(fit3)$R
summary(fit3)
summary(fit3)$
1
names(summary(fit3))
summary(fit3)$residuals
summary(fit3)$adj.r.squared
summary(fit3)$terms
summary(fit3)$aliased
summary(fit3)$sigma
round(fit14$coefficients[2], 3)
round(fit14$coefficients, 3)
round(fit14$coefficients[3], 3)
?plot
factor(mtcars$am)
